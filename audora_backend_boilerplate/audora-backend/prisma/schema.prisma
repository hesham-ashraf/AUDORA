generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
<<<<<<< HEAD
  password String
  role      String
=======
  password  String
  role      String    @default("USER")
>>>>>>> Hesham
  createdAt DateTime  @default(now())

  playlists Playlist[]
  reviews   Review[]
}

model Album {
  id        Int      @id @default(autoincrement())
  title     String
  artist    String
  coverUrl  String
  tracks    Track[]
  reviews   Review[]
}

model Track {
  id       Int     @id @default(autoincrement())
  title    String
  duration Int
  audioUrl String

  album    Album   @relation(fields: [albumId], references: [id])
  albumId  Int

  playlists Playlist[] @relation("PlaylistTracks")
}

model Podcast {
  id          Int       @id @default(autoincrement())
  title       String
  host        String
  coverUrl    String
  episodes    Episode[]
  reviews     Review[]
}

model Episode {
  id         Int     @id @default(autoincrement())
  title      String
  duration   Int
  audioUrl   String

  podcast    Podcast @relation(fields: [podcastId], references: [id])
  podcastId  Int
}

model Playlist {
  id        Int      @id @default(autoincrement())
  title     String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int

  tracks    Track[]  @relation("PlaylistTracks")
}

model Review {
  id          Int      @id @default(autoincrement())
  rating      Int
  comment     String
  contentType String
  contentId   Int
  createdAt   DateTime @default(now())
  
  user        User     @relation(fields: [userId], references: [id])
  userId      Int

  album       Album?   @relation(fields: [albumId], references: [id])
  albumId     Int?

  podcast     Podcast? @relation(fields: [podcastId], references: [id])
  podcastId   Int?
}
